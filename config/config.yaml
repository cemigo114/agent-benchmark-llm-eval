# LLM Agent Evaluation Framework Configuration

# API Keys (can be overridden by environment variables)
api_keys:
  openai: ${OPENAI_API_KEY}
  anthropic: ${ANTHROPIC_API_KEY}  
  google: ${GOOGLE_API_KEY}

# LLM Model Configurations
models:
  gpt4:
    provider: "openai"
    model_name: "gpt-4-0125-preview"
    max_tokens: 4096
    temperature: 0.1
    timeout: 60
  
  gpt5:
    provider: "openai"
    model_name: "gpt-5"
    max_tokens: 8192
    temperature: 0.1
    timeout: 90
  
  gpt35:
    provider: "openai"
    model_name: "gpt-3.5-turbo-0125"
    max_tokens: 4096
    temperature: 0.1
    timeout: 30
  
  claude:
    provider: "anthropic"
    model_name: "claude-3-opus-20240229"
    max_tokens: 4096
    temperature: 0.1
    timeout: 60
    
  claude_opus_4_1:
    provider: "anthropic"
    model_name: "claude-4.1-opus"
    max_tokens: 8192
    temperature: 0.1
    timeout: 90
    
  claude_sonnet:
    provider: "anthropic"
    model_name: "claude-3-sonnet-20240229"
    max_tokens: 4096
    temperature: 0.1
    timeout: 45
    
  gemini:
    provider: "google"
    model_name: "gemini-pro"
    max_tokens: 4096
    temperature: 0.1
    timeout: 45

# Evaluation Configuration
evaluation:
  # Number of trials for pass@k metric
  k_trials: [1, 3, 5, 8, 10]
  
  # Maximum conversation turns
  max_turns: 10
  
  # Timeout for each conversation (seconds)
  conversation_timeout: 300
  
  # Parallel execution settings
  max_concurrent_evaluations: 5
  
  # Retry configuration
  max_retries: 3
  retry_delay: 2.0

# Domain-specific settings
domains:
  retail:
    api_base_url: "http://localhost:8080/retail"
    database_url: "sqlite:///data/retail.db"
    policy_file: "data/domains/retail/policies.json"
    scenarios_file: "data/domains/retail/scenarios.json"
    max_order_value: 10000
    
  customer_service:
    api_base_url: "http://localhost:8080/cs"
    database_url: "sqlite:///data/customer_service.db" 
    policy_file: "data/domains/customer_service/policies.json"
    scenarios_file: "data/domains/customer_service/scenarios.json"
    
  healthcare:
    api_base_url: "http://localhost:8080/health"
    database_url: "sqlite:///data/healthcare.db"
    policy_file: "data/domains/healthcare/policies.json"
    scenarios_file: "data/domains/healthcare/scenarios.json"
    
  finance:
    api_base_url: "http://localhost:8080/finance"
    database_url: "sqlite:///data/finance.db"
    policy_file: "data/domains/finance/policies.json"
    scenarios_file: "data/domains/finance/scenarios.json"

# Logging Configuration
logging:
  level: "INFO"
  format: "{time:YYYY-MM-DD HH:mm:ss} | {level: <8} | {name}:{function}:{line} - {message}"
  file: "logs/evaluation.log"
  rotation: "1 week"
  retention: "4 weeks"

# Database Configuration
database:
  results_db: "sqlite:///results/evaluation_results.db"
  echo_sql: false
  pool_size: 10

# Output Configuration  
output:
  results_dir: "results"
  reports_dir: "results/reports"
  plots_dir: "results/plots"
  export_formats: ["json", "csv", "html"]

# Development/Debug Settings
debug:
  enabled: false
  verbose_logging: false
  save_conversations: true
  mock_apis: false